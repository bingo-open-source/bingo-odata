//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.04.30 at 07:44:23 ÏÂÎç GMT+08:00 
//


package bingo.odata.edm.model.jaxb;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for EDMSimpleType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="EDMSimpleType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Binary"/>
 *     &lt;enumeration value="Boolean"/>
 *     &lt;enumeration value="Byte"/>
 *     &lt;enumeration value="DateTime"/>
 *     &lt;enumeration value="DateTimeOffset"/>
 *     &lt;enumeration value="Time"/>
 *     &lt;enumeration value="Decimal"/>
 *     &lt;enumeration value="Double"/>
 *     &lt;enumeration value="Single"/>
 *     &lt;enumeration value="Guid"/>
 *     &lt;enumeration value="Int16"/>
 *     &lt;enumeration value="Int32"/>
 *     &lt;enumeration value="Int64"/>
 *     &lt;enumeration value="String"/>
 *     &lt;enumeration value="SByte"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "EDMSimpleType")
@XmlEnum
public enum EDMSimpleType {

    @XmlEnumValue("Binary")
    BINARY("Binary"),
    @XmlEnumValue("Boolean")
    BOOLEAN("Boolean"),
    @XmlEnumValue("Byte")
    BYTE("Byte"),
    @XmlEnumValue("DateTime")
    DATE_TIME("DateTime"),
    @XmlEnumValue("DateTimeOffset")
    DATE_TIME_OFFSET("DateTimeOffset"),
    @XmlEnumValue("Time")
    TIME("Time"),
    @XmlEnumValue("Decimal")
    DECIMAL("Decimal"),
    @XmlEnumValue("Double")
    DOUBLE("Double"),
    @XmlEnumValue("Single")
    SINGLE("Single"),
    @XmlEnumValue("Guid")
    GUID("Guid"),
    @XmlEnumValue("Int16")
    INT_16("Int16"),
    @XmlEnumValue("Int32")
    INT_32("Int32"),
    @XmlEnumValue("Int64")
    INT_64("Int64"),
    @XmlEnumValue("String")
    STRING("String"),
    @XmlEnumValue("SByte")
    S_BYTE("SByte");
    private final String value;

    EDMSimpleType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static EDMSimpleType fromValue(String v) {
        for (EDMSimpleType c: EDMSimpleType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
